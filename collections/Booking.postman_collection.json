{
	"info": {
		"_postman_id": "5fd48dba-91af-439c-a760-19e2fc58346a",
		"name": "Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10760691"
	},
	"item": [
		{
			"name": "Get Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"array\",\r",
							"    \"items\": {\r",
							"        \"properties\": {\r",
							"            \"bookingid\": {\r",
							"                \"type\": \"number\"\r",
							"            }\r",
							"        },\r",
							"        \"required\": [\r",
							"            \"bookingid\"\r",
							"        ]\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test(\"Response should be a JSON object\", () => {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response content-type should be a JSON object\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response schema validation\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": [
				{
					"name": "Get Books",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/booking",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "3946"
						},
						{
							"key": "Etag",
							"value": "W/\"f6a-0o49zRkTyQ9sLMhI1uVQpJoZepA\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Jul 2023 21:33:16 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"bookingid\": 122\n    },\n    {\n        \"bookingid\": 11\n    },\n    {\n        \"bookingid\": 61\n    }\n]"
				}
			]
		},
		{
			"name": "Create Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const booking_id = json_response.bookingid;\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"bookingid\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"booking\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"firstname\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"lastname\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"totalprice\": {\r",
							"                    \"type\": \"number\"\r",
							"                },\r",
							"                \"depositpaid\": {\r",
							"                    \"type\": \"boolean\"\r",
							"                },\r",
							"                \"bookingdates\": {\r",
							"                    \"type\": \"object\",\r",
							"                    \"properties\": {\r",
							"                        \"checkin\": {\r",
							"                            \"type\": \"string\"\r",
							"                        },\r",
							"                        \"checkout\": {\r",
							"                            \"type\": \"string\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"required\": [\r",
							"                        \"checkin\",\r",
							"                        \"checkout\"\r",
							"                    ]\r",
							"                },\r",
							"                \"additionalneeds\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"firstname\",\r",
							"                \"lastname\",\r",
							"                \"totalprice\",\r",
							"                \"depositpaid\",\r",
							"                \"bookingdates\",\r",
							"                \"additionalneeds\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\r",
							"        \"bookingid\",\r",
							"        \"booking\"\r",
							"    ]\r",
							"};\r",
							"\r",
							"pm.test(\"Validate bookingid property as Number\", () => {\r",
							"    pm.expect(json_response).to.have.property('bookingid').that.is.an('Number');\r",
							"    pm.collectionVariables.set(\"booking_id\", booking_id);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be a JSON object\", () => {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Validate additionalneeds property as string\", () => {\r",
							"    pm.expect(json_response.booking).to.have.property('additionalneeds').that.is.an('String');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response content-type should be a JSON object\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response schema validation\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": [
				{
					"name": "Create Book",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"{{additionalneeds}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/booking",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "210"
						},
						{
							"key": "Etag",
							"value": "W/\"d2-zEU0ZDSqqJVLxM5hxpRCpOYLo8E\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Jul 2023 16:18:06 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"bookingid\": 2793,\n    \"booking\": {\n        \"firstname\": \"Fernando\",\n        \"lastname\": \"Munoz\",\n        \"totalprice\": 54321,\n        \"depositpaid\": true,\n        \"bookingdates\": {\n            \"checkin\": \"2023-07-01\",\n            \"checkout\": \"2023-08-10\"\n        },\n        \"additionalneeds\": \"I need two cats\"\n    }\n}"
				}
			]
		},
		{
			"name": "Get Book_by_Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"firstname\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"lastname\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"totalprice\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"depositpaid\": {\r",
							"            \"type\": \"boolean\"\r",
							"        },\r",
							"        \"bookingdates\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"checkin\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"checkout\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"checkin\",\r",
							"                \"checkout\"\r",
							"            ]\r",
							"        },\r",
							"        \"additionalneeds\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\r",
							"        \"firstname\",\r",
							"        \"lastname\",\r",
							"        \"totalprice\",\r",
							"        \"depositpaid\",\r",
							"        \"bookingdates\",\r",
							"        \"additionalneeds\"\r",
							"    ]\r",
							"};\r",
							"\r",
							"pm.test(\"Response should be a JSON object\", () => {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Validate additionalneeds property as string\", () => {\r",
							"    pm.expect(json_response).to.have.property('additionalneeds').that.is.an('String');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response content-type should be a JSON object\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response schema validation\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get Book_by_Id",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/booking/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{booking_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "181"
						},
						{
							"key": "Etag",
							"value": "W/\"b5-sycu31oHCHg1A+iYmiijpUQU+Lo\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Jul 2023 21:47:28 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"firstname\": \"Fernando\",\n    \"lastname\": \"Munoz\",\n    \"totalprice\": 54321,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2023-07-01\",\n        \"checkout\": \"2023-08-10\"\n    },\n    \"additionalneeds\": \"I need two cats\"\n}"
				}
			]
		},
		{
			"name": "Update Book_by_Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"firstname\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"lastname\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"totalprice\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"depositpaid\": {\r",
							"            \"type\": \"boolean\"\r",
							"        },\r",
							"        \"bookingdates\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"checkin\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"checkout\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"checkin\",\r",
							"                \"checkout\"\r",
							"            ]\r",
							"        },\r",
							"        \"additionalneeds\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\r",
							"        \"firstname\",\r",
							"        \"lastname\",\r",
							"        \"totalprice\",\r",
							"        \"depositpaid\",\r",
							"        \"bookingdates\",\r",
							"        \"additionalneeds\"\r",
							"    ]\r",
							"};\r",
							"\r",
							"pm.test(\"Response should be a JSON object\", () => {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Validate additionalneeds property as string\", () => {\r",
							"    pm.expect(json_response).to.have.property('additionalneeds').that.is.an('String');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response content-type should be a JSON object\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response schema validation\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "{{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Manuel\",\r\n    \"lastname\": \"Munoz\",\r\n    \"totalprice\": 12345,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2023-07-01\",\r\n        \"checkout\": \"2023-08-01\"\r\n    },\r\n    \"additionalneeds\": \"This is the Dinner\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Update Book_by_Id",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Manuel\",\r\n    \"lastname\": \"Munoz\",\r\n    \"totalprice\": 12345,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2023-07-01\",\r\n        \"checkout\": \"2023-08-01\"\r\n    },\r\n    \"additionalneeds\": \"This is the Dinner\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/booking/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{booking_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "182"
						},
						{
							"key": "Etag",
							"value": "W/\"b6-Q4PBmwrWApMFDJOsXaLeXi1yDgY\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Jul 2023 21:47:57 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"firstname\": \"Manuel\",\n    \"lastname\": \"Munoz\",\n    \"totalprice\": 12345,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2023-07-01\",\n        \"checkout\": \"2023-08-01\"\n    },\n    \"additionalneeds\": \"This is the Dinner\"\n}"
				}
			]
		},
		{
			"name": "Partial Update Book_by_Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"firstname\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"lastname\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"totalprice\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"depositpaid\": {\r",
							"            \"type\": \"boolean\"\r",
							"        },\r",
							"        \"bookingdates\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"checkin\": {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"checkout\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"checkin\",\r",
							"                \"checkout\"\r",
							"            ]\r",
							"        },\r",
							"        \"additionalneeds\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\r",
							"        \"firstname\",\r",
							"        \"lastname\",\r",
							"        \"totalprice\",\r",
							"        \"depositpaid\",\r",
							"        \"bookingdates\",\r",
							"        \"additionalneeds\"\r",
							"    ]\r",
							"};\r",
							"\r",
							"pm.test(\"Response should be a JSON object\", () => {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Validate additionalneeds property as string\", () => {\r",
							"    pm.expect(json_response).to.have.property('additionalneeds').that.is.an('String');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response content-type should be a JSON object\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response schema validation\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "{{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lastname\": \"Garces\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Partial Update Book_by_Id",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lastname\": \"Garces\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/booking/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{booking_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "182"
						},
						{
							"key": "Etag",
							"value": "W/\"b6-+VgoRgqeaOWooyQg4tYUo6JTxTw\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Jul 2023 21:48:34 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"firstname\": \"Fernando\",\n    \"lastname\": \"Garces\",\n    \"totalprice\": 54321,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2023-07-01\",\n        \"checkout\": \"2023-08-10\"\n    },\n    \"additionalneeds\": \"I need two cats\"\n}"
				}
			]
		},
		{
			"name": "Delete Book_by_Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response content-type should be a Text plain\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "{{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/:id",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{booking_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Delete Book_by_Id",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/booking/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{booking_id}}"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "7"
						},
						{
							"key": "Etag",
							"value": "W/\"7-rM9AyJuqT6iOan/xHh+AW+7K/T8\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Jul 2023 21:20:10 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "Created"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const authZUrl = `${pm.environment.get(\"base_url\")}/auth`;",
					"const postRequest = {",
					"    url: authZUrl,",
					"    method: 'POST',",
					"    header: 'Content-Type:application/json',",
					"    body: JSON.stringify({",
					"        \"username\": `${pm.environment.get(\"local_user_name\")}`,",
					"        \"password\": `${pm.environment.get(\"local_user_pwd\")}`",
					"    })",
					"};",
					"",
					"pm.sendRequest( postRequest, (error,response) => {",
					"    pm.environment.unset(\"auth_token\");",
					"    console.log(error ? error : response.json());",
					"    if (response.code == 200){",
					"        pm.environment.set(\"auth_token\",`token=${response.json().token}`);",
					"    }",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Successful request\", () => {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"});",
					"",
					"pm.test(\"Response time is less than 600ms\", () => {",
					"    pm.expect(pm.response.responseTime).to.be.below(600);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "booking_id",
			"value": ""
		}
	]
}